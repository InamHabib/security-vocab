import { ProofPurpose } from './ProofPurpose';
import { IPurposeValidateOptions } from '../../types';
export declare class ControllerProofPurpose extends ProofPurpose {
    controller: any;
    /**
     * Creates a proof purpose that will validate whether or not the verification
     * method in a proof was authorized by its declared controller for the
     * proof's purpose.
     *
     * @param term {string} the `proofPurpose` term, as defined in the
     *    SECURITY_CONTEXT_URL `@context` or a URI if not defined in such.
     * @param [controller] {object} the description of the controller, if it
     *   is not to be dereferenced via a `documentLoader`.
     * @param [date] {string or Date or integer} the expected date for
     *   the creation of the proof.
     * @param [maxTimestampDelta] {integer} a maximum number of seconds that
     *   the date on the signature can deviate from, defaults to `Infinity`.
     */
    constructor({ term, controller, date, maxTimestampDelta, }?: any);
    validate(proof: any, _options: IPurposeValidateOptions): Promise<any>;
}
