{"version":3,"file":"jsonld-document-loader.cjs.production.min.js","sources":["../src/contexts/W3C_Decentralized_Identifiers/index.ts","../src/contexts/W3C_Open_Digital_Rights_Langauge/index.ts","../src/contexts/W3C_Verifiable_Credentials/index.ts","../src/contexts/W3ID_Security_Vocabulary/index.ts","../src/builder/contextFactory.ts","../src/builder/resolverFactory.ts","../src/builder/documentLoaderFactory.ts","../src/index.ts"],"sourcesContent":["import { IContextMap } from '../../types';\nimport W3C_DID_CORE_V1 from './did-v1.json';\n\nconst W3C_DID_CORE_URL_V1 = 'https://www.w3.org/ns/did/v1';\n\nconst W3C_Decentralized_Identifiers: IContextMap = {\n  [W3C_DID_CORE_URL_V1]: W3C_DID_CORE_V1,\n};\n\nexport { W3C_Decentralized_Identifiers };\n","import { IContextMap } from '../../types';\n\nimport W3C_ODRL from './odrl.json';\n\nexport const W3C_ODRL_URL = 'https://www.w3.org/ns/odrl.jsonld';\n\nconst W3C_Open_Digital_Rights_Langauge: IContextMap = {\n  [W3C_ODRL_URL]: W3C_ODRL,\n};\n\nexport { W3C_Open_Digital_Rights_Langauge };\n","import { IContextMap } from '../../types';\n\nimport W3C_VC_DATA_MODEL_V1 from './vc-v1.json';\nimport W3C_VC_DATA_MODEL_EXAMPLES_V1 from './vc-example-v1.json';\n// W3C_Open_Digital_Rights_Langauge is required by W3C_VC_DATA_MODEL_EXAMPLES_V1\nimport { W3C_Open_Digital_Rights_Langauge } from '../W3C_Open_Digital_Rights_Langauge';\n\nconst W3C_VC_DATA_MODEL_URL_V1 = 'https://www.w3.org/2018/credentials/v1';\nconst W3C_VC_DATA_MODEL_EXAMPLES_URL_V1 =\n  'https://www.w3.org/2018/credentials/examples/v1';\n\nconst W3C_Verifiable_Credentials: IContextMap = {\n  [W3C_VC_DATA_MODEL_URL_V1]: W3C_VC_DATA_MODEL_V1,\n  [W3C_VC_DATA_MODEL_EXAMPLES_URL_V1]: W3C_VC_DATA_MODEL_EXAMPLES_V1,\n  ...W3C_Open_Digital_Rights_Langauge,\n};\n\nexport { W3C_Verifiable_Credentials };\n","import { IContextMap } from '../../types';\n\nimport W3ID_SEC_V1 from './sec-v1.json';\nimport W3ID_SEC_V2 from './sec-v2.json';\n\nconst W3ID_SEC_URL_V1 = 'https://w3id.org/security/v1';\nconst W3ID_SEC_URL_V2 = 'https://w3id.org/security/v2';\n\nconst W3ID_Security_Vocabulary: IContextMap = {\n  [W3ID_SEC_URL_V1]: W3ID_SEC_V1,\n  [W3ID_SEC_URL_V2]: W3ID_SEC_V2,\n};\n\nexport { W3ID_Security_Vocabulary };\n","import * as Factory from 'factory.ts';\n\nimport { IContextManager, IContextMap } from '../types';\n\nconst factoryDefaults: IContextManager = {\n  contexts: {},\n  addContext: function(contextMap: IContextMap): IContextManager {\n    this.contexts = {\n      ...this.contexts,\n      ...contextMap,\n    };\n    return this;\n  },\n};\n\nconst pluginFactory = Factory.Sync.makeFactory<IContextManager>(\n  factoryDefaults\n);\n\nconst plugin = pluginFactory.build();\n\nexport { factoryDefaults, pluginFactory, plugin };\n","import * as Factory from 'factory.ts';\n\nimport { IResolverManager, IStartsWithResolver, IResolver } from '../types';\n\nconst factoryDefaults: IResolverManager = {\n  resolvers: {},\n  addResolver: function(\n    startsWithResolverMap: IStartsWithResolver\n  ): IResolverManager {\n    this.resolvers = {\n      ...this.resolvers,\n      ...startsWithResolverMap,\n    };\n    return this;\n  },\n  hasResolverForUri: function(uri: string) {\n    let matchingResolver = undefined;\n    Object.keys(this.resolvers).forEach(startWith => {\n      if (uri.indexOf(startWith) === 0) {\n        matchingResolver = this.resolvers[startWith];\n      }\n    });\n    return matchingResolver;\n  },\n  resolve: function(uri: string) {\n    let matchingResolver = this.hasResolverForUri(uri);\n    if (matchingResolver) {\n      return (matchingResolver as IResolver).resolve(uri);\n    }\n    // console.error('Resolve called on unsupported URI ' + uri);\n    throw new Error('Resolve called on unsupported URI ' + uri);\n  },\n};\n\nconst pluginFactory = Factory.Sync.makeFactory<IResolverManager>(\n  factoryDefaults\n);\n\nconst plugin = pluginFactory.build();\n\nexport { factoryDefaults, pluginFactory, plugin };\n","import { DocumentLoaderManager } from '../types';\n\nimport * as Factory from 'factory.ts';\nimport * as ContextFactory from './contextFactory';\nimport * as ResolverFactory from './resolverFactory';\n\nconst factoryDefaults = {\n  ...ContextFactory.factoryDefaults,\n  ...ResolverFactory.factoryDefaults,\n  documentLoader: async function(uri: string) {\n    let matchingResolver = this.hasResolverForUri(uri);\n    if (matchingResolver) {\n      const doc = await matchingResolver.resolve(uri);\n      return Promise.resolve({\n        contextUrl: null,\n        documentUrl: uri,\n        document: doc,\n      });\n    }\n\n    if (this.contexts[uri]) {\n      const context = this.contexts[uri];\n      return Promise.resolve({\n        contextUrl: null,\n        documentUrl: uri,\n        document: JSON.stringify(context),\n      });\n    }\n    // leave uncommented.\n    console.error('documentLoader called on unsupported URI ' + uri);\n    throw new Error('documentLoader called on unsupported URI ' + uri);\n  },\n  buildDocumentLoader: function() {\n    return (uri: string) => {\n      return this.documentLoader(uri);\n    };\n  },\n} as DocumentLoaderManager;\n\nconst pluginFactory = Factory.Sync.makeFactory<DocumentLoaderManager>(\n  factoryDefaults\n)\n  .combine(ContextFactory.pluginFactory)\n  .combine(ResolverFactory.pluginFactory);\n\nconst plugin = pluginFactory.build();\n\nexport { factoryDefaults, pluginFactory, plugin };\n","import * as contexts from './contexts';\nimport * as types from './types';\n\nimport {\n  contextFactory,\n  resolverFactory,\n  documentLoaderFactory,\n} from './builder';\n\nconst golem = documentLoaderFactory.pluginFactory;\n\nexport {\n  golem,\n  contextFactory,\n  resolverFactory,\n  documentLoaderFactory,\n  contexts,\n  types,\n};\n"],"names":["W3C_Decentralized_Identifiers","W3C_Open_Digital_Rights_Langauge","factoryDefaults","contexts","addContext","contextMap","this","pluginFactory","Factory","makeFactory","build","resolvers","addResolver","startsWithResolverMap","hasResolverForUri","uri","matchingResolver","undefined","Object","keys","forEach","startWith","indexOf","_this","resolve","Error","ContextFactory","ResolverFactory","documentLoader","_this2","Promise","contextUrl","documentUrl","document","JSON","stringify","console","error","doc","buildDocumentLoader","_this3","combine","golem","documentLoaderFactory"],"mappings":"kGAKMA,UAFsB,q4DCGtBC,UAFsB,8vLCGK,+rKAE/B,48CAKGA,uGCTmB,+qDACA,usFCFlBC,EAAmC,CACvCC,SAAU,GACVC,WAAY,SAASC,eACdF,cACAG,KAAKH,SACLE,GAEEC,OAILC,EAAgBC,OAAaC,YACjCP,8DAGaK,EAAcG,SCfvBR,EAAoC,CACxCS,UAAW,GACXC,YAAa,SACXC,eAEKF,eACAL,KAAKK,UACLE,GAEEP,MAETQ,kBAAmB,SAASC,cACtBC,OAAmBC,SACvBC,OAAOC,KAAKb,KAAKK,WAAWS,SAAQ,SAAAC,GACH,IAA3BN,EAAIO,QAAQD,KACdL,EAAmBO,EAAKZ,UAAUU,OAG/BL,GAETQ,QAAS,SAAST,OACZC,EAAmBV,KAAKQ,kBAAkBC,MAC1CC,SACMA,EAA+BQ,QAAQT,SAG3C,IAAIU,MAAM,qCAAuCV,KAIrDR,EAAgBC,OAAaC,YACjCP,8DAGaK,EAAcG,SChCvBR,OACDwB,EACAC,GACHC,wBAA+Bb,0CAWzBc,EAAK1B,SAASY,UAETe,QAAQN,QAAQ,CACrBO,WAAY,KACZC,YAAajB,EACbkB,SAAUC,KAAKC,UAJDN,EAAK1B,SAASY,YAQhCqB,QAAQC,MAAM,4CAA8CtB,GACtD,IAAIU,MAAM,4CAA8CV,WApBvCT,KAAnBU,EAAmBa,EAAKf,kBAAkBC,mBAC1CC,yBACgBA,EAAiBQ,QAAQT,mBAArCuB,eACCR,QAAQN,QAAQ,CACrBO,WAAY,KACZC,YAAajB,EACbkB,SAAUK,+FAgBhBC,oBAAqB,6BACZ,SAACxB,UACCyB,EAAKZ,eAAeb,OAK3BR,EAAgBC,OAAaC,YACjCP,GAECuC,QAAQf,GACRe,QAAQd,8DAEIpB,EAAcG,SCpCvBgC,EAAQC"}