"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var r=require("@transmute/did-key-common"),t=require("tslib"),i=e(require("bs58")),n=e(require("base64url")),o=require("@peculiar/webcrypto"),c=require("@transmute/did-key-cipher");function u(){return(u=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e}).apply(this,arguments)}var s,a=["P-256","P-384","P-521"],y={"P-256":0,"P-384":1,"P-521":2},p={0:{kty:"EC",crv:"P-256"},1:{kty:"EC",crv:"P-384"},2:{kty:"EC",crv:"P-521"}},f={"P-256":"SHA-256","P-384":"SHA-384","P-521":"SHA-512"},l="object"==typeof process&&"object"==typeof process.versions&&void 0!==process.versions.node&&void 0!==typeof window?new o.Crypto:window.crypto,v=function(e){var r={};return e.d&&(r.privateKeyBase58=i.encode(Buffer.concat([n.toBuffer(e.d)]))),e.x&&(r.publicKeyBase58=i.encode(Buffer.concat([n.toBuffer(e.x)]))),e.x&&e.y&&(r.publicKeyBase58=i.encode(Buffer.concat([n.toBuffer(e.x),n.toBuffer(e.y)]))),r},K=function(e,r){return void 0===r&&(r="key"),"did:"+r+":"+e},d=function(e){var r,t,n,o,c,s=(t=v(r=e),n=i.decode(t.publicKeyBase58),o=y[r.crv],(c=new Uint8Array(3+n.length))[0]=18,c[1]=o,c[2]=1,c.set(n,3),"z"+i.encode(c));return u({id:"#"+s,type:"JsonWebKey2020",controller:K(s)},v(e))},b=function(e,r){try{return Promise.resolve(l.subtle.importKey("jwk",e,{name:"ECDH",namedCurve:e.crv},!0,["deriveBits"])).then((function(e){return Promise.resolve(l.subtle.importKey("jwk",r,{name:"ECDH",namedCurve:r.crv},!0,["deriveBits"])).then((function(r){return Promise.resolve(l.subtle.deriveBits({name:"ECDH",public:r},e,256)).then((function(e){return new Uint8Array(e)}))}))}))}catch(e){return Promise.reject(e)}},m=r.Jws.createJws,h=r.Jws.createDetachedJws,P=function(e){try{return Promise.resolve(l.subtle.importKey("jwk",e,{name:"ECDSA",namedCurve:e.crv},!0,["sign"])).then((function(r){return{sign:function(t){try{return Promise.resolve(l.subtle.sign({name:"ECDSA",hash:{name:f[e.crv]}},r,t))}catch(e){return Promise.reject(e)}}}}))}catch(e){return Promise.reject(e)}},w=function(e){try{return Promise.resolve(l.subtle.importKey("jwk",e,{name:"ECDSA",namedCurve:e.crv},!0,["verify"])).then((function(r){return{verify:function(t,i){try{return Promise.resolve(l.subtle.verify({name:"ECDSA",hash:{name:f[e.crv]}},r,i,t))}catch(e){return Promise.reject(e)}}}}))}catch(e){return Promise.reject(e)}},k=function(e){var r=i.decode(e.publicKeyBase58),t={x:n.encode(r.slice(0,r.length/2)),y:n.encode(r.slice(r.length/2))};return e.privateKeyBase58&&(t.d=n.encode(i.decode(e.privateKeyBase58))),t},B=function(e){var r=i.decode(e.substring(1));if(18!==r[0])throw new Error("Unsupported multibase "+r[0].toString(16));var t=p[r[1]];if(!t)throw new Error("Unsupported multibase "+r[0].toString(16)+" "+r[1].toString(16));return t},J=function(e){var r=e.id.substring(e.id.indexOf("#")+1),t={id:e.id,type:"JsonWebKey2020",controller:e.controller};return t.publicKeyJwk=u({},B(r),k({publicKeyBase58:e.publicKeyBase58})),e.privateKeyBase58&&(t.privateKeyJwk=u({},B(r),k({publicKeyBase58:e.publicKeyBase58,privateKeyBase58:e.privateKeyBase58}))),t};function g(){return function(e){return e}}exports.KeyPair=s=function(){function e(e){if(this.id=e.id,this.type=e.type||"JsonWebKey2020",this.controller=e.controller,e.publicKeyBase58)this.publicKeyBuffer=i.decode(e.publicKeyBase58);else{if(!e.publicKeyJwk)throw new Error("publicKeyJwk or publicKeyBase58 is required.");var r=d(e.publicKeyJwk);this.publicKeyBuffer=i.decode(r.publicKeyBase58),this.id=e.id||r.id,this.controller=r.controller}if(e.privateKeyBase58)this.privateKeyBuffer=i.decode(e.privateKeyBase58);else if(e.privateKeyJwk){var t=d(e.privateKeyJwk);this.privateKeyBuffer=i.decode(t.privateKeyBase58)}}e.fingerprintFromPublicKey=function(e){return s.from(e).id.substring(1)},e.generateEphemeralKeyPair=function(e){try{return Promise.resolve(c.getEpkGenerator(s,e)())}catch(e){return Promise.reject(e)}},e.kekFromEphemeralPeer=function(e){var r=e.keyAgreementKey,t=e.epk;try{if(!t||"object"!=typeof t)throw new TypeError('"epk" must be an object.');var i=new s({publicKeyJwk:t}),n=i.publicKeyBuffer,o=Buffer.from(r.id);return Promise.resolve(r.deriveSecret({publicKey:i.toJsonWebKeyPair()})).then((function(e){return Promise.resolve(c.deriveKey({secret:e,producerInfo:n,consumerInfo:o})).then((function(e){return Promise.resolve(c.KeyEncryptionKey.createKek({keyData:e})).then((function(e){return{kek:e}}))}))}))}catch(e){return Promise.reject(e)}},e.kekFromStaticPeer=function(e){var r=e.ephemeralKeyPair,t=e.staticPublicKey;try{if("JsonWebKey2020"!==t.type)throw new Error('"staticPublicKey.type" must be "JsonWebKey2020".');return Promise.resolve(s.from(r.keypair)).then((function(e){var i=e.publicKeyBuffer,o=Buffer.from(t.id);return Promise.resolve(e.deriveSecret({publicKey:t})).then((function(e){return Promise.resolve(c.deriveKey({secret:e,producerInfo:i,consumerInfo:o})).then((function(e){return Promise.resolve(c.KeyEncryptionKey.createKek({keyData:e})).then((function(e){return{kek:e,epk:r.epk,apu:n.encode(i),apv:n.encode(o)}}))}))}))}))}catch(e){return Promise.reject(e)}};var r=e.prototype;return r.fingerprint=function(){return this.toJsonWebKeyPair().id.substring(1)},r.toKeyPair=function(e){void 0===e&&(e=!1);var r={id:this.id,type:"UnsupportedVerificationMethod2020",controller:this.controller,publicKeyBase58:i.encode(this.publicKeyBuffer)};return e&&(r.privateKeyBase58=i.encode(this.privateKeyBuffer)),r},r.toJsonWebKeyPair=function(e){void 0===e&&(e=!1);var r=this.toKeyPair(e);return J(r)},r.signer=function(){try{var e=this.toJsonWebKeyPair(!0);return Promise.resolve(P(e.privateKeyJwk))}catch(e){return Promise.reject(e)}},r.verifier=function(){try{var e=this.toJsonWebKeyPair();return Promise.resolve(w(e.publicKeyJwk))}catch(e){return Promise.reject(e)}},r.deriveSecret=function(e){var r,t=this.toJsonWebKeyPair(!0).privateKeyJwk;if(e.publicKey.publicKeyJwk)r=e.publicKey.publicKeyJwk;else{if(!e.publicKey.publicKeyBase58)throw new Error("Cannot deriveSecret from remote... publicKeyJwk or publicKeyBase58 must be present.");r=J(e.publicKey).publicKeyJwk}return b(t,r)},e}(),exports.KeyPair.JWE_ALG="ECDH-ES+A256KW",exports.KeyPair.generate=function(e){try{return Promise.resolve(function(e){void 0===e&&(e={kty:"EC",crvOrSize:"P-256"});try{var r=function(r){if(t)return r;throw new Error("Generate does not support "+e.kty+" and "+e.crvOrSize)},t=!1,i=function(){if("EC"===e.kty&&-1!==a.indexOf(e.crvOrSize))return Promise.resolve(l.subtle.generateKey({name:"ECDSA",namedCurve:e.crvOrSize},!0,["sign","verify"])).then((function(e){return Promise.resolve(l.subtle.exportKey("jwk",e.privateKey)).then((function(e){return t=!0,{publicKeyJwk:{kty:e.kty,crv:e.crv,x:e.x,y:e.y},privateKeyJwk:{kty:e.kty,crv:e.crv,x:e.x,y:e.y,d:e.d}}}))}))}();return Promise.resolve(i&&i.then?i.then(r):r(i))}catch(e){return Promise.reject(e)}}(e)).then((function(e){return new s(u({},d(e.privateKeyJwk)))}))}catch(e){return Promise.reject(e)}},exports.KeyPair.from=function(e){return new s(u({},e))},exports.KeyPair.fromFingerprint=function(e){var r=e.fingerprint;try{if(B(r).kty){var t=i.decode(r.substring(1)),n=i.encode(t.slice(3));return Promise.resolve(new s({id:"#"+r,controller:K(r),type:"JsonWebKey2020",publicKeyBase58:n}))}throw new Error("Cannot create key from fingerprint "+r)}catch(e){return Promise.reject(e)}},exports.KeyPair=s=t.__decorate([g()],exports.KeyPair);var E=r.getResolve(exports.KeyPair),x={__proto__:null,resolve:E,get:r.getGet(E)};exports.createDetachedJws=h,exports.createJws=m,exports.deriveSecret=b,exports.driver=x,exports.privateKeyToSigner=P,exports.publicKeyToVerifier=w;
//# sourceMappingURL=did-key-web-crypto.cjs.production.min.js.map
