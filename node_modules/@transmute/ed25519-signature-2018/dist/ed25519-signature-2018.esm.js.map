{"version":3,"file":"ed25519-signature-2018.esm.js","sources":["../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/constants.ts","../src/Ed25519Signature2018.ts"],"sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","const { constants: securityConstants } = require('security-context');\n\nconst constants = {\n  // leave commented out, changing this will break compatability\n  // with digital bazaar\n  // SECURITY_CONTEXT_URL: 'https://w3id.org/security/v3',\n  SECURITY_CONTEXT_URL: securityConstants.SECURITY_CONTEXT_V2_URL,\n  SECURITY_CONTEXT_V1_URL: securityConstants.SECURITY_CONTEXT_V1_URL,\n  SECURITY_CONTEXT_V2_URL: securityConstants.SECURITY_CONTEXT_V2_URL,\n  SECURITY_PROOF_URL: 'https://w3id.org/security#proof',\n  SECURITY_SIGNATURE_URL: 'https://w3id.org/security#signature',\n};\n\nexport default constants;\n","import jsonld from 'jsonld';\nimport constants from './constants';\nimport crypto from 'crypto';\n\nimport { Ed25519KeyPair, EdDSA, keyUtils } from '@transmute/did-key-ed25519';\n\nconst sha256 = (data: any) => {\n  const h = crypto.createHash('sha256');\n  h.update(data);\n  return h.digest();\n};\n\nexport interface IEd25519Signature2018Options {\n  key?: any;\n  date?: any;\n  signer?: any;\n}\n\nexport class Ed25519Signature2018 {\n  public useNativeCanonize: boolean = false;\n  public key: any;\n  public proof: any;\n  public date: any;\n  public creator: any;\n  public type: string = 'Ed25519Signature2018';\n  public signer: any;\n  public verifier: any;\n  public verificationMethod?: string;\n  constructor(options: IEd25519Signature2018Options = {}) {\n    this.signer = options.signer;\n    this.date = options.date;\n    if (options.key) {\n      this.key = options.key;\n      this.verificationMethod = this.key.id;\n      this.signer = {\n        sign: async ({ data }: any) => {\n          const header = {\n            alg: 'EdDSA',\n            b64: false,\n            crit: ['b64'],\n          };\n          const payload = Buffer.from(data);\n          const { privateKeyJwk } = await this.key.toJsonWebKeyPair(true);\n          const _jws = await EdDSA.signDetached(payload, privateKeyJwk, header);\n          return _jws;\n        },\n      };\n\n      this.verifier = {\n        verify: async ({ data, signature }: any) => {\n          let verified = false;\n          try {\n            verified = await EdDSA.verifyDetached(\n              signature,\n              data,\n              keyUtils.publicKeyJwkFromPublicKeyBase58(this.key.publicKeyBase58)\n            );\n          } catch (e) {\n            console.error('An error occurred when verifying signature: ', e);\n          }\n          return verified;\n        },\n      };\n    }\n  }\n\n  async canonize(\n    input: any,\n    { documentLoader, expansionMap, skipExpansion }: any\n  ) {\n    return jsonld.canonize(input, {\n      algorithm: 'URDNA2015',\n      format: 'application/n-quads',\n      documentLoader,\n      expansionMap,\n      skipExpansion,\n      useNative: this.useNativeCanonize,\n    });\n  }\n\n  async canonizeProof(proof: any, { documentLoader, expansionMap }: any) {\n    // `jws`,`signatureValue`,`proofValue` must not be included in the proof\n    // options\n    proof = { ...proof };\n    delete proof.jws;\n    delete proof.signatureValue;\n    delete proof.proofValue;\n    return this.canonize(proof, {\n      documentLoader,\n      expansionMap,\n      skipExpansion: false,\n    });\n  }\n\n  async createVerifyData({\n    document,\n    proof,\n    documentLoader,\n    expansionMap,\n  }: any) {\n    // concatenate hash of c14n proof options and hash of c14n document\n    const c14nProofOptions = await this.canonizeProof(proof, {\n      documentLoader,\n      expansionMap,\n    });\n    const c14nDocument = await this.canonize(document, {\n      documentLoader,\n      expansionMap,\n    });\n    return Buffer.concat([sha256(c14nProofOptions), sha256(c14nDocument)]);\n  }\n\n  async matchProof({\n    proof,\n  }: // document,\n  // purpose,\n  // documentLoader,\n  // expansionMap,\n  any) {\n    return proof.type === this.type;\n  }\n\n  async updateProof({ proof }: any) {\n    // extending classes may do more\n    return proof;\n  }\n\n  async sign({ verifyData, proof }: any) {\n    if (!(this.signer && typeof this.signer.sign === 'function')) {\n      throw new Error('A signer API has not been specified.');\n    }\n\n    const detachedJws = await this.signer.sign({ data: verifyData });\n    proof.jws = detachedJws;\n    return proof;\n  }\n\n  async createProof({\n    document,\n    purpose,\n    documentLoader,\n    expansionMap,\n    compactProof,\n  }: any) {\n    // build proof (currently known as `signature options` in spec)\n    let proof;\n    if (this.proof) {\n      // use proof JSON-LD document passed to API\n      proof = await jsonld.compact(this.proof, constants.SECURITY_CONTEXT_URL, {\n        documentLoader,\n        expansionMap,\n        compactToRelative: false,\n      });\n    } else {\n      // create proof JSON-LD document\n      proof = { '@context': constants.SECURITY_CONTEXT_URL };\n    }\n\n    // ensure proof type is set\n    proof.type = this.type;\n\n    // set default `now` date if not given in `proof` or `options`\n    let date = this.date;\n    if (proof.created === undefined && date === undefined) {\n      date = new Date();\n    }\n\n    // ensure date is in string format\n    if (date !== undefined && typeof date !== 'string') {\n      date = new Date(date).toISOString();\n    }\n\n    // add API overrides\n    if (date !== undefined) {\n      proof.created = date;\n    }\n    // `verificationMethod` is for newer suites, `creator` for legacy\n    if (this.verificationMethod !== undefined) {\n      proof.verificationMethod = this.verificationMethod;\n    }\n    if (this.creator !== undefined) {\n      proof.creator = this.creator;\n    }\n\n    // add any extensions to proof (mostly for legacy support)\n    proof = await this.updateProof({\n      document,\n      proof,\n      purpose,\n      documentLoader,\n      expansionMap,\n      compactProof,\n    });\n\n    // allow purpose to update the proof; the `proof` is in the\n    // SECURITY_CONTEXT_URL `@context` -- therefore the `purpose` must\n    // ensure any added fields are also represented in that same `@context`\n    proof = await purpose.update(proof, {\n      document,\n      suite: this,\n      documentLoader,\n      expansionMap,\n    });\n\n    // create data to sign\n    const verifyData = await this.createVerifyData({\n      document,\n      proof,\n      documentLoader,\n      expansionMap,\n      compactProof,\n    });\n\n    // sign data\n    proof = await this.sign({\n      verifyData,\n      document,\n      proof,\n      documentLoader,\n      expansionMap,\n    });\n\n    return proof;\n  }\n\n  async getVerificationMethod({ proof, documentLoader }: any) {\n    let { verificationMethod } = proof;\n\n    if (!verificationMethod) {\n      // backwards compatibility support for `creator`\n      const { creator } = proof;\n      verificationMethod = creator;\n    }\n\n    if (typeof verificationMethod === 'object') {\n      verificationMethod = verificationMethod.id;\n    }\n\n    if (!verificationMethod) {\n      throw new Error('No \"verificationMethod\" or \"creator\" found in proof.');\n    }\n\n    // Note: `expansionMap` is intentionally not passed; we can safely drop\n    // properties here and must allow for it\n    const framed = await jsonld.frame(\n      verificationMethod,\n      {\n        // '@context': constants.SECURITY_CONTEXT_URL,\n        '@context': constants.SECURITY_CONTEXT_URL,\n        '@embed': '@always',\n        id: verificationMethod,\n      },\n      { documentLoader, compactToRelative: false }\n    );\n\n    if (!framed) {\n      throw new Error(`Verification method ${verificationMethod} not found.`);\n    }\n\n    // ensure verification method has not been revoked\n    if (framed.revoked !== undefined) {\n      throw new Error('The verification method has been revoked.');\n    }\n\n    return framed;\n  }\n\n  async verifySignature({ verifyData, verificationMethod, proof }: any) {\n    let { verifier } = this;\n    if (!verifier) {\n      const key = await Ed25519KeyPair.from(verificationMethod);\n      // this suite relies on detached JWS....\n      // so we need to make sure thats the signature format we are verifying.\n      verifier = {\n        verify: async ({ data, signature }: any) => {\n          let verified = false;\n          const { publicKeyJwk } = await key.toJsonWebKeyPair(false);\n          try {\n            verified = await EdDSA.verifyDetached(\n              signature,\n              data,\n              publicKeyJwk\n            );\n          } catch (e) {\n            console.error('An error occurred when verifying signature: ', e);\n          }\n          return verified;\n        },\n      };\n    }\n    return verifier.verify({ data: verifyData, signature: proof.jws });\n  }\n\n  async verifyProof({\n    proof,\n    document,\n    purpose,\n    documentLoader,\n    expansionMap,\n    compactProof,\n  }: any) {\n    try {\n      // create data to verify\n      const verifyData = await this.createVerifyData({\n        document,\n        proof,\n        documentLoader,\n        expansionMap,\n        compactProof,\n      });\n\n      // fetch verification method\n      const verificationMethod = await this.getVerificationMethod({\n        proof,\n        document,\n        documentLoader,\n        expansionMap,\n      });\n\n      // verify signature on data\n      const verified = await this.verifySignature({\n        verifyData,\n        verificationMethod,\n        document,\n        proof,\n        documentLoader,\n        expansionMap,\n      });\n      if (!verified) {\n        throw new Error('Invalid signature.');\n      }\n\n      // ensure proof was performed for a valid purpose\n      const purposeResult = await purpose.validate(proof, {\n        document,\n        suite: this,\n        verificationMethod,\n        documentLoader,\n        expansionMap,\n      });\n\n      // console.log(purposeResult);\n\n      if (!purposeResult.valid) {\n        throw purposeResult.error;\n      }\n\n      return { verified: true, purposeResult };\n    } catch (error) {\n      return { verified: false, error };\n    }\n  }\n}\n"],"names":["require","securityConstants","constants","SECURITY_CONTEXT_URL","SECURITY_CONTEXT_V2_URL","SECURITY_CONTEXT_V1_URL","SECURITY_PROOF_URL","SECURITY_SIGNATURE_URL","sha256","data","h","crypto","createHash","update","digest","Ed25519Signature2018","options","signer","date","key","verificationMethod","id","sign","header","alg","b64","crit","payload","Buffer","from","toJsonWebKeyPair","privateKeyJwk","EdDSA","signDetached","verifier","verify","signature","verified","verifyDetached","keyUtils","publicKeyJwkFromPublicKeyBase58","publicKeyBase58","e","console","error","canonize","input","documentLoader","expansionMap","skipExpansion","jsonld","algorithm","format","useNative","useNativeCanonize","canonizeProof","proof","jws","signatureValue","proofValue","createVerifyData","document","c14nProofOptions","c14nDocument","concat","matchProof","type","updateProof","verifyData","Error","detachedJws","createProof","purpose","compactProof","created","undefined","Date","toISOString","creator","suite","compact","compactToRelative","getVerificationMethod","frame","framed","revoked","verifySignature","Ed25519KeyPair","publicKeyJwk","verifyProof","validate","purposeResult","valid"],"mappings":"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"}