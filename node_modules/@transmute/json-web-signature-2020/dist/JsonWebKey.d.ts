import { JWK, JsonWebKeyPair, JsonWebKeyVerificationMethod, JsonWebKeyPairGenerateOptions } from './types';
export declare class JsonWebKey implements JsonWebKeyPair {
    id: string;
    type: string;
    controller: string;
    publicKeyJwk: JWK;
    privateKeyJwk: JWK;
    static generate(options?: JsonWebKeyPairGenerateOptions): Promise<JsonWebKey>;
    static from(options: JsonWebKeyPair): Promise<JsonWebKey>;
    constructor(options: JsonWebKeyPair);
    toLinkedDataKeyPair(): JsonWebKeyPair;
    toVerificationMethod(): JsonWebKeyVerificationMethod;
    signer(): {
        sign(): Promise<never>;
    } | {
        sign({ data }: any): Promise<string>;
    };
    verifier(): {
        verify(): Promise<never>;
    } | {
        verify({ data, signature }: any): Promise<boolean>;
    };
}
